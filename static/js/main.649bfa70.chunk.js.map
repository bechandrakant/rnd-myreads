{"version":3,"sources":["api/BooksAPI.js","components/Book.js","components/BookList.js","components/BookShelf.js","components/constants/constant.js","components/BookReadsHome.js","components/SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","Book","bookData","onChange","useState","currentShelf","setCurrentShelf","thumbnail","imageLinks","title","className","style","width","height","backgroundImage","e","target","value","disabled","authors","join","BookList","bookList","map","BookShelf","SHELVES","BookReadsHome","bookShelves","index","filter","to","SearchBooks","matchingBooks","setMatchingBooks","query","setQuery","searchBooks","length","BooksAPI","searchedBooks","forEach","searchBook","filteredBook","type","placeholder","BooksApp","state","componentDidMount","fetchBooks","setState","updateBook","exact","path","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.649bfa70.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { useState } from 'react'\n\nconst Book = ({ bookData, onChange }) => {\n\n  const [currentShelf, setCurrentShelf] = useState(bookData.shelf)\n\n  const updateBookShelf = (e) => {\n    setCurrentShelf(e.target.value)\n    onChange(bookData, e.target.value)\n  }\n\n  const thumbnail = bookData?.imageLinks?.thumbnail ?? \n      \"https://upload.wikimedia.org/wikipedia/commons/4/47/Comic_image_missing.png\"\n  \n  const title = bookData?.title ?? \"No title Found\"\n\n  return (\n    <li>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div className=\"book-cover\" style={{ width: 150, height: 200, backgroundImage: `url(${thumbnail})` }}></div>\n          <div className=\"book-shelf-changer\">\n            <select onChange={updateBookShelf} value={currentShelf || \"none\"}>\n              <option value=\"move\" disabled>Move to...</option>\n              <option value=\"currentlyReading\">Currently Reading</option>\n              <option value=\"wantToRead\">Want to Read</option>\n              <option value=\"read\">Read</option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{title}</div>\n        <div className=\"book-authors\">{bookData?.authors?.join(', ')}</div>\n      </div>\n    </li>\n          \n  )\n}\n\nexport default Book\n","import React from 'react'\nimport Book from \"./Book\";\n\nconst BookList = ({ books, onChange }) => {\n  \n  const bookList = books.map(book => \n                              <Book \n                                key={book.id} \n                                bookData={book} \n                                onChange={onChange}/>)\n  \n  return (\n    <ol className=\"books-grid\">\n      {bookList}\n    </ol>\n  )\n}\n\nexport default BookList\n","import React from 'react'\nimport BookList from \"./BookList\";\n\nconst BookShelf = ({ title, books, onChange }) => {\n  return (\n    <div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{title}</h2>\n      <div className=\"bookshelf-books\">\n        <BookList books={books} onChange={onChange} />\n      </div>\n    </div>              \n  )\n}\n\nexport default BookShelf\n","export const SHELVES = [\n  {\n    title: 'Currently Reading',\n    id: 'currentlyReading'\n  },\n  {\n    title: 'Want To Read',\n    id: 'wantToRead'\n  },\n  {\n    title: 'Read',\n    id: 'read'\n  }\n];","import React from 'react'\nimport BookShelf from \"./BookShelf\"\nimport { Link } from \"react-router-dom\"\nimport { SHELVES } from \"./constants/constant\"\n\nconst BookReadsHome = ({ books, onChange }) => {\n\n  const bookShelves = SHELVES.map((shelf, index) => {\n    const bookList = books.filter(book => book.shelf === shelf.id)\n    return (\n      <BookShelf \n        key={index}\n        title={shelf.title}\n        books={bookList}\n        onChange={onChange}\n      />)\n  })\n\n  return (   \n    <div className=\"list-books\">\n    <div className=\"list-books-title\">\n      <h1>MyReads: A Book Lending App</h1>\n    </div>\n    <div className=\"list-books-content\">\n      <div>\n        { bookShelves }\n      </div>\n    </div>\n    <Link to=\"/search\">\n      <div className=\"open-search\">\n        Add a book \n      </div>\n    </Link> \n  </div>\n  )\n}\n\nexport default BookReadsHome\n","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport BookList from \"./BookList\"\nimport * as BooksAPI from '.././api/BooksAPI'\n\nconst SearchBooks = ({ books, onChange }) => {\n  const [matchingBooks, setMatchingBooks] = useState(null)\n  const [query, setQuery] = useState(\"\")\n\n  const handleChange = (e) => {\n    setQuery(e.target.value)\n    searchBooks(e.target.value)\n  }\n\n  const searchBooks = (query) => {\n    if (query.length === 0) {\n      setMatchingBooks(null)\n    }\n    else {\n      BooksAPI.search(query).then(searchedBooks => {\n        if (searchedBooks.length > 0) {\n          searchedBooks.forEach(searchBook => {\n            const filteredBook = books.filter(book => book.id === searchBook.id)\n            if (filteredBook.length) {\n              searchBook.shelf = filteredBook[0].shelf\n            }\n          })\n          setMatchingBooks(searchedBooks)\n        } else {\n          setMatchingBooks(null)\n        }\n      })\n    }\n  }\n\n  return (\n    <div className=\"search-books\">\n    <div className=\"search-books-bar\">\n      <Link to=\"/\">\n        <div className=\"close-search\">Close</div>\n      </Link>\n      <div className=\"search-books-input-wrapper\">\n        {/*\n          NOTES: The search from BooksAPI is limited to a particular set of search terms.\n          You can find these search terms here:\n          https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n          However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n          you don't find a specific author or title. Every search is limited by search terms.\n        */}\n        <input \n          type=\"text\" \n          placeholder=\"Search by title or author\" \n          value={query}\n          onChange={handleChange} />\n      </div>\n    </div>\n    <div className=\"search-books-results\">\n      { matchingBooks ? \n        <ol className=\"books-grid\">\n          <BookList \n            books={matchingBooks}\n            onChange={onChange}\n            />\n        </ol> : <h4>No matching results found!</h4>}\n    </div>\n  </div>\n  )\n}\n\nexport default SearchBooks\n","import React from 'react'\nimport * as BooksAPI from './api/BooksAPI'\nimport './App.css'\nimport { Route } from 'react-router-dom'\nimport BookReadsHome from \"./components/BookReadsHome\";\nimport SearchBooks from \"./components/SearchBooks\";\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n  }\n\n  componentDidMount = () => {\n    this.fetchBooks()\n  }\n  \n  fetchBooks = () => {\n    BooksAPI\n      .getAll()\n      .then(books => this.setState({ books }))\n  }\n\n  updateBook = (book, shelf) => {\n    BooksAPI\n      .update(book, shelf)\n      .then(() => this.fetchBooks())\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Route exact path=\"/\">\n          <BookReadsHome \n            books={this.state.books} \n            onChange={this.updateBook}/>\n        </Route>\n        <Route exact path=\"/search\">\n          <SearchBooks books={this.state.books} onChange={this.updateBook} />\n        </Route>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root'))\n"],"sourceRoot":""}